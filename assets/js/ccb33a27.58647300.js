"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[274],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||i;return r?a.createElement(f,s(s({ref:t},d),{},{components:r})):a.createElement(f,s({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var u=2;u<i;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3620:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:2},s="Databases",o={unversionedId:"infrastructure/databases",id:"infrastructure/databases",title:"Databases",description:"Document database",source:"@site/docs/infrastructure/databases.md",sourceDirName:"infrastructure",slug:"/infrastructure/databases",permalink:"/docs/infrastructure/databases",draft:!1,editUrl:"https://github.com/atp-things/atp-things.github.io/docs/infrastructure/databases.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Infrastructure",permalink:"/docs/infrastructure/"},next:{title:"Services",permalink:"/docs/services/Tools"}},l={},u=[{value:"Document database",id:"document-database",level:2},{value:"Timeseries",id:"timeseries",level:2},{value:"SQL",id:"sql",level:2}],d={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"databases"},"Databases"),(0,n.kt)("h2",{id:"document-database"},"Document database"),(0,n.kt)("p",null,"Preferred database - MongoDB"),(0,n.kt)("p",null,"Document database is preferred option for storing the data. It is used for storing the dataEntity, dataSet, dataRecord, personRegistry, deviceRegistry, propertyRegistry"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"dataEntity - It has a pointer to the database where data is stored (timeseries, dataSet, dataRecord)"),(0,n.kt)("li",{parentName:"ul"},"personRegistry - access control, device ownership, dataEntity ownership"),(0,n.kt)("li",{parentName:"ul"},"deviceRegistry - dataEntity pointers")),(0,n.kt)("h2",{id:"timeseries"},"Timeseries"),(0,n.kt)("p",null,"Preferred database - MongoDB Timeseries (optional InfluxDB)"),(0,n.kt)("p",null,"The timeseries database stores the data. The data is linked to dataEntity with uuid stored as metadata."),(0,n.kt)("p",null,"Timeseries values:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"timestamp"),(0,n.kt)("li",{parentName:"ul"},"uuid"),(0,n.kt)("li",{parentName:"ul"},"value_X (X represents value dimension)")),(0,n.kt)("h2",{id:"sql"},"SQL"),(0,n.kt)("p",null,"Preferred - MySQl (optional MariaDB, PosgreSQL)\nThe SQL database is used to store timeseries data, due to Time series databases do not have an option for updating historical data."),(0,n.kt)("p",null,"Columns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"timestamp"),(0,n.kt)("li",{parentName:"ul"},"uuid"),(0,n.kt)("li",{parentName:"ul"},"dimension"),(0,n.kt)("li",{parentName:"ul"},"value")))}c.isMDXComponent=!0}}]);